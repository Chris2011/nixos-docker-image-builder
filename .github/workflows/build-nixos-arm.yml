# This is a basic workflow to help you get started with Actions

name: Build NixOS for Aarch64 (RasbperryPi 3)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-piguard:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        
      - name: Create download folder
        run: mkdir downloads
      
      - name: Generate piguard image
#        uses: uraimo/run-on-arch-action@v2.3.0
#        with:
#          arch: aarch64
#          distro: alpine_latest
#          apk update
#          apk add docker docker-compose
        run: |
          echo '{ url = "https://Chris2011:${{ secrets.NIX_REPO_ACCESS_TOKEN }}@${{ secrets.NIX_CONFIG_REPO }}/"; }' > vars.nix
          sh ${GITHUB_WORKSPACE}/run.sh up --build
#        env:
#          NIX_REPO: '{ url = "https://Chris2011:${{ secrets.NIX_REPO_ACCESS_TOKEN }}@${{ secrets.NIX_CONFIG_REPO }}/"; }'
#          run: |
#            uname -a
#            echo ::set-output name=uname::$(uname -a)

      # Runs a single command using the runners shell
#      - name: Generate piguard image
#        run: |
#          echo $NIX_REPO > vars.nix
#          ./run.sh up --build
          
  build-octoprint:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Create download folder
        run: mkdir downloads

      # Runs a single command using the runners shell
      - name: Generate octoprint image
#            apk update
#            apk add docker docker-compose
        run: |
            echo '{ url = "https://Chris2011:${{ secrets.NIX_REPO_ACCESS_TOKEN }}@${{ secrets.NIX_CONFIG_REPO }}/"; }' > vars.nix
            sh ${GITHUB_WORKSPACE}/run.sh up --build
#        env:
#          NIX_REPO: '{ url = "https://Chris2011:${{ secrets.NIX_REPO_ACCESS_TOKEN }}@${{ secrets.NIX_CONFIG_REPO }}/"; }'

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
        # run: |
          # echo Add other actions to build,
          # echo test, and deploy your project.
